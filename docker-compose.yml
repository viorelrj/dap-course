version: "3.9"
services:
  kibana:
    image: kibana:7.14.2
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
  metricbeat:
    build: ./src/metricbeat
    # image: docker.elastic.co/beats/metricbeat:7.16.0
    user: root
    volumes:
      # - ./src/metricbeat/metricbeat.docker.yml:/usr/share/metricbeat/metricbeat.yml
      - ./src/metricbeat/metricbeat.postgresql.yml:/usr/share/metricbeat/modules.d/postgresql.yml
      - /var/run/docker.sock:/var/run/docker.sock:ro
      # - /sys/fs/cgroup:/hostfs/sys/fs/cgroup:ro
      # - /proc:/hostfs/proc:ro
      - /:/hostfs:ro
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - setup.kibana.host=kibana:5601
    ports:
      - "5044:5044"
    depends_on:
      - elasticsearch
      - kibana
  filebeat:
    image: docker.elastic.co/beats/filebeat:7.16.0
    restart: on-failure
    # build: ./src/filebeat
    user: root
    environment:
      - output.elasticsearch.hosts=["elasticsearch:9200"]
      - setup.kibana.host=kibana:5601
    volumes:
      - ./src/filebeat/filebeat.docker.yml:/usr/share/filebeat/filebeat.yml:ro
      # - ./src/filebeat/filebeat.postgresql.yml:/usr/share/filebeat/modules.d/postgresql.yml
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
  elasticsearch:
    image: elasticsearch:7.14.2
    environment:
      - discovery.type=single-node
    ports:
      - "9200:9200"
      - "9300:9300"
  processed_db:
    image: docker.io/bitnami/postgresql
    ports:
      - '5432:5432'
    labels:
      - co.elastic.logs/module:postgresql
      # - co.elastic.logs/fileset.stdout:access
      # - co.elastic.logs/fileset.stderr:error

    environment:
      - POSTGRES_HOST_AUTH_METHOD=trust
      - POSTGRESQL_REPLICATION_MODE=master
      - POSTGRESQL_REPLICATION_USER=repl_user
      - POSTGRESQL_REPLICATION_PASSWORD=repl_password
      - POSTGRESQL_USERNAME=postgres
      - POSTGRESQL_PASSWORD=admin
      - POSTGRESQL_DATABASE=processed
      - ALLOW_EMPTY_PASSWORD=yes
      - POSTGRESQL_PGAUDIT_LOG=all
  processed_db_copy-1:
    image: docker.io/bitnami/postgresql
    ports:
      - '5433:5432'
    depends_on:
      - processed_db
    environment:
      - POSTGRES_HOST_AUTH_METHOD=trust
      - POSTGRESQL_REPLICATION_MODE=slave
      - POSTGRESQL_REPLICATION_USER=repl_user
      - POSTGRESQL_REPLICATION_PASSWORD=repl_password
      - POSTGRESQL_MASTER_HOST=processed_db
      - POSTGRESQL_USERNAME=postgres
      - POSTGRESQL_PASSWORD=admin
      - POSTGRESQL_MASTER_PORT_NUMBER=5432
      - ALLOW_EMPTY_PASSWORD=yes
  processed_db_copy-2:
    image: docker.io/bitnami/postgresql:latest
    ports:
      - '5434:5432'
    depends_on:
      - processed_db
      - elasticsearch
    environment:
      - POSTGRESQL_REPLICATION_MODE=slave
      - POSTGRESQL_REPLICATION_USER=repl_user
      - POSTGRESQL_REPLICATION_PASSWORD=repl_password
      - POSTGRESQL_MASTER_HOST=processed_db
      - POSTGRESQL_USERNAME=postgres
      - POSTGRESQL_PASSWORD=admin
      - POSTGRESQL_MASTER_PORT_NUMBER=5432
      - ALLOW_EMPTY_PASSWORD=yes
  parsed_sup:
    restart: on-failure
    build: 
      context: ./src
      dockerfile: ./parsed_sup/Dockerfile
    depends_on:
      # - crawler_queue
      - processed_db
    ports:
      - "50051"
  crawler_manager:
    build:
      context: ./src
      dockerfile: ./crawler_manager/Dockerfile
    depends_on:
      - crawler_queue
  crawler:
    build: src/crawler
    restart: always
    scale: 3
  crawler_queue:
    image: 'redis'
    labels:
      - co.elastic.logs/module:postgresql
    ports:
      - "6379"
  service:
    # restart: on-failure
    depends_on:
      - processed_db
    ports:
      - "3004:5000"
    build:
      context: ./src
      dockerfile: ./service/Dockerfile
  service_cache:
    # restart: on-failure
    image: redis
  gateway:
    build: src/gateway
    ports:
      - "3003:80"
